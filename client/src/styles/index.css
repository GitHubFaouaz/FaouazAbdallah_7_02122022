@charset "UTF-8";
@-webkit-keyframes animateSquare {
  0%, 100% {
    transform: translateY(-40px);
  }
  50% {
    transform: translateY(40px);
  }
}
@keyframes animateSquare {
  0%, 100% {
    transform: translateY(-40px);
  }
  50% {
    transform: translateY(40px);
  }
}
@-webkit-keyframes animateColorBg {
  0% {
    transform: translate(0px, 0px);
  }
  20% {
    transform: translate(300px, -300px);
  }
  40% {
    transform: translate(500px, 100px);
  }
  60% {
    transform: translate(-100px, 200px);
  }
  80% {
    transform: translate(-400px, -300px);
  }
  100% {
    transform: translate(100px, 100px);
  }
}
@keyframes animateColorBg {
  0% {
    transform: translate(0px, 0px);
  }
  20% {
    transform: translate(300px, -300px);
  }
  40% {
    transform: translate(500px, 100px);
  }
  60% {
    transform: translate(-100px, 200px);
  }
  80% {
    transform: translate(-400px, -300px);
  }
  100% {
    transform: translate(100px, 100px);
  }
}
.banner {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-wrap: wrap; /* ains les blocks ne se coles pas */
}
.banner .blocks {
  display: block;
  width: 15px; /* le boutton peut couper a ccause du flex-wrap: donc la taille du block doit etre changer */
  height: 15px;
  /* animation-delay: 1s; */
  cursor: pointer;
  background: red;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.auth {
  display: flex;
  justify-content: center;
  align-content: center;
  min-height: 100vh;
  flex-wrap: wrap;
}

.colorBg {
  position: absolute;
  filter: blur(150px);
}
.colorBg:nth-child(1) {
  /* pour les  3 couleurs des enfants de color pour le bg du body en gradiant si on enleve filter dans color on comprend mieux  */
  top: -350px;
  width: 100%;
  height: 600px;
  background: #e65c00;
  border-radius: 0% 0% 100% 100%;
}
.colorBg:nth-child(2) {
  bottom: -150px;
  left: 0px;
  width: 50%;
  height: 700px;
  background: #f9d423;
  border-radius: 100% 0% 100% 0%;
}
.colorBg:nth-child(3) {
  /* pour les  3 couleurs des enfants de color pour le bg du body en gradiant si on enleve filter dans color on comprend mieux  */
  bottom: -150px;
  right: 0px;
  width: 50%;
  height: 700px;
  border-radius: 0% 100% 0% 100%;
  background: #6dd5ed;
}

.containerForm {
  width: 60%;
  display: flex;
  justify-content: space-evenly;
}
.containerForm .containerLogo {
  display: flex;
  justify-content: center;
}
.containerForm .form {
  width: 700px;
  position: relative;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.2);
  padding: 50px 40px;
  display: flex;
  flex-wrap: wrap;
}
.containerForm .form h2 {
  color: #e65c00;
  font-weight: 500;
  letter-spacing: 0.1em;
  position: absolute;
  left: 5px;
  top: 5px;
}
.containerForm .form .inputBox {
  position: relative;
  width: 300px;
  margin-top: 35px;
  margin-left: 10px;
}
.containerForm .form .inputBox input {
  position: relative;
  width: 100%;
  padding: 15px 10px 10px;
  background: none;
  border-radius: 15px;
  border: none;
  outline: none;
  color: #fff;
  font-size: 1rem;
  letter-spacing: 0.05em;
  z-index: 10;
}
.containerForm .form .inputBox input:valid ~ span, .containerForm .form .inputBox input:focus ~ span {
  color: #e65c00;
  transform: translateX(0px) translateY(-34px);
  font-size: 0.75em;
}
.containerForm .form .inputBox input:valid ~ i {
  /* le i s'ecarts'agrandit */
  height: 35px;
}
.containerForm .form .inputBox span {
  position: absolute;
  left: 0;
  padding: 15px 0px 10px; /*haut horizontal bas*/
  font-size: 1rem;
  color: black;
  pointer-events: none; /* quel fait la souris comme evenement La propriété CSS pointer-events permet de contrôler les circonstances dans lesquelles un élément graphique peut être une cible, c'est-à-dire recevoir des évènements de la souris, du pointeur ou du doigt. */
  letter-spacing: 0.5rem;
  transition: 0.5s;
}
.containerForm .form .inputBox i {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(45deg, #f79200, rgba(0, 0, 0, 0.6784313725));
  border-radius: 15px;
  transition: 0.5s;
  pointer-events: none;
  z-index: 9;
}
.containerForm .form .square {
  display: flex;
  flex-direction: column;
  justify-content: center;
  background: rgba(255, 255, 255, 0.1);
  -webkit-backdrop-filter: blur(5px);
          backdrop-filter: blur(5px); /*pour le flou la visibilité comme opacity \en-US\docs\Web\CSS\backdrop-filter */
  box-shadow: 0 25px 45px rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.5);
  border-right: 1px solid rgba(255, 255, 255, 0.2);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 10px;
  -webkit-animation: animateSquare 10s linear infinite;
          animation: animateSquare 10s linear infinite;
  -webkit-animation-delay: calc(-1s * var(--i));
          animation-delay: calc(-1s * var(--i)); /*les variables du html*/
  /* --------------------------------------les carrés  */
}
.containerForm .form .square p {
  margin-bottom: 5px;
}
.containerForm .form .square:nth-child(8) {
  position: absolute;
  bottom: -50px;
  right: -40px;
  width: 150px;
  height: 50px;
  z-index: 2;
  --i: 2;
}
.containerForm .form .square:nth-child(9) {
  position: absolute;
  top: 150px;
  left: -85px;
  width: 120px;
  height: 120px;
  font-weight: 700;
  cursor: pointer;
  z-index: 2;
  text-align: center;
  --i: 1;
}
.containerForm .form .square:nth-child(10) {
  position: absolute;
  top: -50px;
  right: -60px;
  width: 100px;
  height: 100px;
  text-align: center;
  mix-blend-mode: difference;
  --i: 0;
}
.containerForm .form .square:nth-child(11) {
  position: absolute;
  bottom: -80px;
  left: 100px;
  width: 250px;
  height: 50px;
  text-align: center;
  --i: 3;
}
.containerForm .form .square:nth-child(12) {
  position: absolute;
  top: -80px;
  right: 140px;
  width: 60px;
  height: 60px;
  --i: 4;
}
.containerForm .box {
  margin-left: 1rem;
  border-left: solid 1px rgba(43, 37, 3, 0.8);
}

#body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  position: relative;
}

.divColor {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  justify-content: space-around;
  align-content: space-around;
  flex-wrap: wrap;
  min-height: 130vh;
  filter: blur(150px);
}
.divColor .color:nth-child(1) {
  background: rgb(212, 11, 231);
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 10s linear infinite;
          animation: animateColorBg 10s linear infinite;
}
.divColor .color:nth-child(2) {
  background: rgb(240, 115, 13);
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 15s linear infinite;
          animation: animateColorBg 15s linear infinite;
}
.divColor .color:nth-child(3) {
  background: yellow;
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 25s linear infinite;
          animation: animateColorBg 25s linear infinite;
}
.divColor .color:nth-child(4) {
  background: rgb(255, 55, 0);
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 30s linear infinite;
          animation: animateColorBg 30s linear infinite;
}
.divColor .color:nth-child(5) {
  background: lightcoral;
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 40s linear infinite;
          animation: animateColorBg 40s linear infinite;
}
.divColor .color:nth-child(6) {
  background: aqua;
  width: 250px;
  height: 250px;
  border-radius: 50%;
  -webkit-animation: animateColorBg 50s linear infinite;
          animation: animateColorBg 50s linear infinite;
}

/* ---------------------------------formulaire */
.container {
  position: absolute;
  /* left: -80px; */
  /* top: 0;s */
  display: flex;
  justify-content: center;
  align-items: center;
}
.container .drop {
  position: relative;
  width: 350px;
  height: 350px;
  box-shadow: inset 20px 20px 20px rgba(0, 0, 0, 0.05), 25px 35px 20px rgba(0, 0, 0, 0.05), 25px 30px 30px rgba(0, 0, 0, 0.05), inset -20px -20px 25px rgba(255, 255, 255, 0.9);
  transition: 0.5s;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 33% 67% 28% 72%/46% 32% 68% 54%; /*https://9elements.github.io/fancy-border-radius/#46.33.32.72--.*/
}
.container .drop:hover {
  border-radius: 50%;
}
.container .drop::before {
  content: "";
  position: absolute;
  top: 50px;
  left: 85px;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: #fff;
  opacity: 0.9;
}
.container .drop::after {
  content: "";
  position: absolute;
  top: 90px;
  left: 110px;
  width: 15px;
  height: 15px;
  border-radius: 50%;
  background: #fff;
  opacity: 0.9;
}
.container .drop .content {
  position: relative;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 40px;
  gap: 15px;
}
.container .drop .content h2 {
  position: relative;
  -moz-columns: #333;
       columns: #333;
  font-size: 1.5em;
}
.container .drop .content form {
  display: flex;
  flex-direction: column;
  gap: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.container .drop .content form .inputBox {
  position: relative;
  width: 225px;
  box-shadow: inset 2px 5px 10px rgba(0, 0, 0, 0.1), inset -2px -5px 10px rgb(255, 255, 255), 15px 15px 10px rgba(0, 0, 0, 0.05), 15px 10px 15px rgba(0, 0, 0, 0.025);
  /* autre style sans box-shadow: ; */
  border-radius: 25px;
}
.container .drop .content form .inputBox::before {
  content: "";
  position: absolute;
  top: 8px;
  left: 50px;
  transform: translateX(-50%);
  width: 65px;
  height: 5px;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 5px;
}
.container .drop .content form .inputBox input {
  border: none;
  outline: none;
  background: transparent;
  width: 100%;
  font-size: 1rem;
  padding: 10px 15px;
}
.container .drop .content form .inputBox input[type=submit] {
  color: #fff;
  text-transform: uppercase;
  font-size: 1rem;
  cursor: pointer;
  letter-spacing: 0.1em;
  font-weight: 500;
}
.container .drop .content form .inputBox:last-child {
  width: 120px;
  background: #ff0f5b;
  box-shadow: inset 2px 5px 10px rgba(0, 0, 0, 0.1), 15px 15px 10px rgba(0, 0, 0, 0.05), 15px 10px 15px rgba(0, 0, 0, 0.025);
  transition: 0.5s;
}
.container .drop .content form .inputBox:last-child:hover {
  width: 150px;
}

/* ----------------------------forgot password  */
.btns {
  position: absolute;
  right: -120px;
  bottom: 0;
  width: 120px;
  height: 120px;
  background: #c61dff; /* //background: repeating-radial-gradient(#c61dff,#fff 20px); */
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #fff;
  line-height: 1.2em;
  letter-spacing: 0.1em;
  font-size: 0.8em;
  transition: 0.25s;
  text-align: center;
  box-shadow: inset 10px 10px 10px rgba(190, 1, 254, 0.05), 15px 25px 10px rgba(190, 1, 254, 0.1), 15px 20px 20px rgba(190, 1, 254, 0.1), inset -10px -10px 15px rgba(255, 255, 255, 0.5);
  border-radius: 35% 65% 71% 29%/55% 62% 38% 45%;
}
.btns:hover {
  border-radius: 50%;
}
.btns::before {
  content: "";
  position: absolute;
  top: 15px;
  left: 30px;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background: #fff;
  opacity: 0.45;
}

.signup {
  bottom: 150px;
  right: -120px;
  width: 80px;
  height: 80px;
  border-radius: 46% 54% 46% 54%/61% 55% 45% 39%;
  background: #01b4ff;
  box-shadow: inset 10px 10px 10px rgba(190, 1, 254, 0.05), 15px 25px 10px rgba(190, 1, 254, 0.1), 15px 20px 20px rgba(190, 1, 254, 0.1), inset -10px -10px 15px rgba(255, 255, 255, 0.5);
}
.signup::before {
  left: 15px;
  width: 15px;
  height: 15px;
  background: #fff;
}/*# sourceMappingURL=index.css.map */